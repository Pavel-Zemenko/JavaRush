CashMachine (7)

Возвращаемся к паттерну Command.

1. Создай пакет command, в нём будут все классы, относящиеся к этой логике.
   Подумай над модификатором доступа для всех классов в этом пакете.

2. Создай интерфейс Command с методом void execute().

3. Для каждой операции создай класс-команду, удовлетворяющую паттерну Command.
   Имена классов DepositCommand, InfoCommand, WithdrawCommand, ExitCommand.

4. Создай public класс CommandExecutor, через который можно будет взаимодействовать
   со всеми командами. Создай ему статическую карту Map<Operation, Command> allKnownCommandsMap,
   которую проинициализируй всеми известными нам операциями и командами.

4.1. Создай метод public static final void execute(Operation operation),
     который будет дергать метод execute у нужной команды. Реализуй эту логику.
4.2. Расставь правильно модификаторы доступа учитывая, что единственная точка входа -
     это метод execute.

Проверяем, чтоб структура соответствовала тестам на сервере.
Логику будем переносить в следующем таске.


Требования:

    Интерфейс Command должен быть создан в отдельном файле.

    В интерфейсе Command должен быть метод void execute().

    В отдельном файле должен быть создан класс DepositCommand,
    реализующий интерфейс Command.

    В отдельном файле должен быть создан класс InfoCommand,
    реализующий интерфейс Command.

    В отдельном файле должен быть создан класс WithdrawCommand,
    реализующий интерфейс Command.

    В отдельном файле должен быть создан класс ExitCommand,
    реализующий интерфейс Command.

    В отдельном файле должен быть создан класс CommandExecutor.

    Класс CommandExecutor должен содержать приватное статическое поле
    Map<Operation, Command> allKnownCommandsMap.

    Класс CommandExecutor должен содержать
    public static final void метод execute(Operation operation).

    Класс CommandExecutor должен содержать приватный конструктор.

    Поле Map<Operation, Command> allKnownCommandsMap класса CommandExecutor
    должно быть проинициализировано всеми известными нам операциями и командами.