CashMachine (10)

Сегодня мы займёмся командой WithdrawCommand - это самая сложная операция.

1. Реализуй следующий алгоритм для команды WithdrawCommand:
1.1. Считать код валюты (метод уже есть).
1.2. Получить манипулятор для этой валюты.
1.3. Пока пользователь не введёт корректные данные выполнять:
1.3.1. Попросить ввести сумму.
1.3.2. Если введены некорректные данные, то сообщить об этом пользователю и вернуться к п. 1.3.
1.3.3. Проверить, достаточно ли средств на счету.
       Для этого в манипуляторе создай метод boolean isAmountAvailable(int expectedAmount),
       который вернёт true, если денег достаточно для выдачи.
       Если недостаточно, то вернуться к п. 1.3.
1.3.4. Списать деньги со счёта. Для этого в манируляторе создай метод
       Map<Integer, Integer> withdrawAmount(int expectedAmount), который вернёт
       карту HashMap<номинал, количество>.
       Подробно логику этого метода смотри в п.2.
1.3.5. Вывести пользователю результат из п. 1.3.4. в следующем виде:
       <табуляция>номинал - количество.
       Сортировка - от большего номинала к меньшему.
       Вывести сообщение об успешной транзакции.
1.3.6. Перехватить исключение NotEnoughMoneyException, уведомить юзера о нехватке банкнот
       и вернуться к п. 1.3.

2. Логика основного метода withdrawAmount:
2.1. Внимание!!! Метод withdrawAmount должен возвращать минимальное количество банкнот,
     которыми набирается запрашиваемая сумма.
     Используйте Жадный алгоритм (use google).
     Если есть несколько вариантов, то использовать тот, в котором максимальное количество
     банкнот высшего номинала.
     Если для суммы 600 результат - три банкноты: 500 + 50 + 50 = 200 + 200 + 200,
     то выдать первый вариант.

     Пример, надо выдать 600.

     В манипуляторе есть следующие банкноты:
     500 - 2
     200 - 3
     100 - 1
     50 - 12

     Результат должен быть таким:
     500 - 1
     100 - 1

     т.е. всего две банкноты (это минимальное количество банкнот) номиналом 500 и 100.

2.2. Мы же не можем одни и те же банкноты выдавать несколько раз, поэтому
     если мы нашли вариант выдачи денег (п.2.1. успешен), то вычесть все эти банкноты
     из карты в манипуляторе.

2.3. Метод withdrawAmount должен кидать NotEnoughMoneyException, если купюрами
     невозможно выдать запрашиваемую сумму.

     Пример, надо выдать 600.

     В манипуляторе есть следующие банкноты:
     500 - 2
     200 - 2

     Результат - данными банкнотами невозможно выдать запрашиваемую сумму. Кинуть исключение.
     Не забудьте, что в некоторых случаях картой кидается ConcurrentModificationException.


Требования:

    Класс CurrencyManipulator должен содержать метод
    boolean isAmountAvailable(int expectedAmount).

    Метод isAmountAvailable должен возвращать true, если денег достаточно для выдачи.

    Класс CurrencyManipulator должен содержать метод
    Map<Integer, Integer> withdrawAmount(int expectedAmount).

    Метод withdrawAmount должен возвращать карту согласно заданию.

    Метод execute класса WithdrawCommand должен реализовывать алгоритм
    для команды WithdrawCommand, согласно заданию.